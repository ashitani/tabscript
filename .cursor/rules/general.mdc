---
description: 
globs: 
alwaysApply: false
---
# Project rule
TabScriptは弦楽器演奏に用いるタブ譜を表現するための言語です。
このプロジェクトはTabScriptの仕様とその処理系であるpythonモジュールを取り扱います。

## プロジェクト構成

tabscript/
├── docs/ # ドキュメント
│   ├── format.md # 言語仕様
│   ├── implementation.md # 実装仕様
│   ├── tests.md # テスト仕様
│   └── layout.md # レイアウト仕様
├── src/ # ソースコード
│   └── tabscript/ # メインのパッケージ
│       ├── init.py # パブリックAPIの定義
│       ├── models.py # データモデル定義
│       ├── parser/ # パース処理関連
│       ├── renderer.py # レンダリング処理
│       ├── style.py # スタイル定義
│       ├── exceptions.py # 例外定義
│       └── cli.py # コマンドラインインターフェース
├── tests/ # テストコード
│   ├── data/ # テストデータ
│   ├── integration/ # 統合テスト
│   ├── parser/ # パース処理のテスト
│   └── renderer/ # レンダリング処理のテスト
├── README.md # プロジェクト概要
└── requirements.txt # 依存パッケージ

## ドキュメント

各種仕様が下記に記載してあるので、必要に応じて参照してください。

- [format.md](mdc:docs/format.md) - TabScriptの言語仕様
- [implementation.md](mdc:mplementation.md) - 実装上の注意点
- @tests.md - テスト仕様
- [layout.md](mdc:docs/layout.md) - 可視化のレイアウト仕様

## デバッグ時の注意事項

@tests.md および@implementation.md を参照し、どのテストがどのソースコードに対応しているかを確認の上、なるべく他のコードに影響しないように問題を各個に解決してください。

pytest -v や、pytest tests/parser/test_**_***.py -v などを自分で実行して、問題点があれば修正して再度テストを実行、というサイクルを勝手に回してください。その上でテスト間の矛盾や仕様上の不具合など、解決できない問題については問い合わせしてください。

pytestの実行権限を与えているので、python -m pytestではなく、pytestでテストを実行してください。




